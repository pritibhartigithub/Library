import tkinter as tk
from tkinter import messagebox

class Book:
    def __init__(self, title, author):
        self.title = title
        self.author = author

class LibraryManagementSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Library Management System")
        
        self.books = []
        
        self.create_widgets()
        
    
    def create_widgets(self):
        self.label_title = tk.Label(self.root, text="Title:")
        self.entry_title = tk.Entry(self.root)
        
        self.label_author = tk.Label(self.root, text="Author:")
        self.entry_author = tk.Entry(self.root)
        
        self.button_add = tk.Button(self.root, text="Add Book", command=self.add_book)
        self.button_search = tk.Button(self.root, text="Search", command=self.search_book)
        
        self.text_area = tk.Text(self.root, height=10, width=50)
        
        self.label_title.grid(row=0, column=0, sticky="e")
        self.entry_title.grid(row=0, column=1)
        
        self.label_author.grid(row=1, column=0, sticky="e")
        self.entry_author.grid(row=1, column=1)
        
        self.button_add.grid(row=2, columnspan=2, pady=10)
        self.button_search.grid(row=3, columnspan=2, pady=10)
        
        self.text_area.grid(row=4, columnspan=2)
    
    def add_book(self):
        title = self.entry_title.get()
        author = self.entry_author.get()
        
        if title and author:
            book = Book(title, author)
            self.books.append(book)
            messagebox.showinfo("Success", "Book added successfully!")
        else:
            messagebox.showerror("Error", "Please enter both title and author.")
        
        self.clear_entries()
    
    def search_book(self):
        title = self.entry_title.get()
        
        if title:
            found_books = [book for book in self.books if title.lower() in book.title.lower()]
            
            if found_books:
                self.display_books(found_books)
            else:
                self.display_books([])
                messagebox.showinfo("No Books Found", "No books matching the title.")
        else:
            messagebox.showerror("Error", "Please enter a title to search.")
    
    def display_books(self, books):
        self.text_area.delete(1.0, tk.END)
        
        if books:
            for book in books:
                self.text_area.insert(tk.END, f"Title: {book.title}\n")
                self.text_area.insert(tk.END, f"Author: {book.author}\n\n")
        else:
            self.text_area.insert(tk.END, "No books found in the library.")
    
    def clear_entries(self):
        self.entry_title.delete(0, tk.END)
        self.entry_author.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    library_system = LibraryManagementSystem(root)
    root.mainloop()
